{"version":3,"sources":["components/elements/Header/Header.js","config.js","components/elements/SearchBar/SearchBar.js","components/elements/HeroImage/HeroImage.js","components/elements/MovieThumb/MovieThumb.js","components/elements/Actor/Actor.js","components/elements/FourColGrid/FourColGrid.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/Spinner/Spinner.js","components/Home/Home.js","components/elements/NotFound/NotFound.js","components/elements/Navigation/Navigation.js","components/elements/MovieInfoBar/MovieInfoBar.js","helpers.js","components/elements/MovieInfo/MovieInfo.js","components/Movie/Movie.js","components/App/App.js","index.js"],"names":["Header","className","to","src","alt","API","SearchBar","props","timeout","debounceSearch","event","clearTimeout","setTimeout","callback","target","value","input","React","createRef","name","type","placeholder","onChange","this","searchTerm","ref","Component","HeroImage","style","background","image","title","text","MovieThumb","clickable","pathname","movieId","movieName","Actor","actor","profile_path","charactor","FourColGrid","grids","movies","map","element","key","id","poster_path","original_title","actors","header","leading","LoadMoreBtn","onClick","Spinner","Home","state","heroImage","loading","currentPage","totalPages","fetchItemsWithMode","Mode","endpoint","setState","fetchItems","SearchItems","localStorage","getItem","homeState","JSON","parse","fetch","then","res","json","concat","results","page","total_pages","console","log","setItem","stringify","catch","backdrop_path","overview","NotFound","Navigation","movie","MovieInfoBar","size","time","hours","Math","floor","mins","calcTime","runtime","money","budget","Intl","NumberFormat","currency","minimumFractionDigits","format","revenue","MovieInfo","min","max","low","high","vote_average","directors","length","director","Movie","match","useState","direction","setMovie","setLoad","init","useEffect","params","content","status_code","cast","crew","filter","member","job","App","process","Fragment","path","component","exact","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.116fbdd2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Header.css'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className={\"rmdb-header\"}>\r\n            <div className={\"rmdb-header-content\"}>\r\n                <Link to={\"/\"} >\r\n                    <img className={'rmdb-logo'} src={\"../images/reactMovie_logo.png\"} alt={'rmdb-logo'} />\r\n                </Link>\r\n                <img className={'rmdb-tmdb-logo'} src={\"../images/tmdb_logo.png\"} alt={\"tmdb-logo\"} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '8e6beb6cf2af55cf5546a5957d97d1ba';\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL ='http://image.tmdb.org/t/p/';\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport const API = {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n}\n\n","import React, {Component} from 'react';\r\nimport './SearchBar.css';\r\nimport FontAwesome from 'react-fontawesome'\r\n\r\nclass SearchBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.input = React.createRef();\r\n    }\r\n\r\n    timeout = null;\r\n\r\n    debounceSearch = (event) => {\r\n        clearTimeout(this.timeout);\r\n        this.timeout = setTimeout(() => {\r\n        },500)\r\n        this.props.callback(event.target.value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"rmdb-searchbar\"}>\r\n                <div className={\"rmdb-searchbar-content\"}>\r\n                    <FontAwesome className={\"rmdb-fa-search\"} name={\"search\"} />\r\n                    <input type={\"text\"} className={\"rmdb-searchbar-input\"} placeholder={\"Search\"}\r\n                           onChange={(event) => this.props.callback(event.target.value)} value={this.props.searchTerm}\r\n                           ref={this.input}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar\r\n","import React from 'react';\r\nimport './HeroImage.css';\r\n\r\nconst HeroImage = (props) => {\r\n    return (\r\n        <div className={\"rmdb-heroimage\"}\r\n             style={{background:\r\n                 `linear-gradient(to bottom, rgba(0,0,0,0) 39%, rgba(0,0,0,0) 41%, rgba(0,0,0,0.65) 100% ),\r\n                 url('${props.image}'), #1c1c1c`}}>\r\n            <div className={\"rmdb-heroimage-content\"}>\r\n                <div className={\"rmdb-heroimage-text\"}>\r\n                    <h1>{props.title}</h1>\r\n                    <p>{props.text}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroImage\r\n","import React from 'react';\r\nimport './MovieThumb.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst MovieThumb = (props) => {\r\n    return (\r\n        <div className={\"rmdb-moviethumb\"}>\r\n            {props.clickable ?\r\n                <Link to={{pathname: `/${props.movieId}`, movieName: `${props.movieName}`}}>\r\n                    <img src={props.image} alt={\"moviethumb\"} /></Link>\r\n                : <img src={props.image} alt={\"moviethumb\"} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieThumb\r\n","import React from 'react';\r\nimport './Actor.css';\r\nimport {API} from \"../../../config\";\r\n\r\n\r\nconst Actor = (props) => {\r\n    return (\r\n        <div className={\"rmdb-actor\"}>\r\n            <img alt={\"actor_img\"}\r\n                     src={props.actor.profile_path ? `${API.IMAGE_BASE_URL}${API.POSTER_SIZE}/${props.actor.profile_path}`: '../images/no_image.jpg'} />\r\n            <span className={\"rmdb-actor-name\"}>{props.actor.name}</span>\r\n            <span className={\"rmdb-actor-character\"}>{props.actor.charactor}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Actor;\r\n","import React from 'react';\r\nimport './FourColGrid.css';\r\nimport MovieThumb from \"../MovieThumb/MovieThumb\";\r\nimport {API} from \"../../../config\";\r\nimport Actor from \"../Actor/Actor\";\r\n\r\nconst FourColGrid = (props) => {\r\n\r\n    let grids = [];\r\n\r\n    if(props.movies) {\r\n        grids = props.movies.map((element) => {\r\n            return (\r\n                <div key={element.id} className={\"rmdb-grid-element\"}>\r\n                    <MovieThumb clickable={true}\r\n                                image={element.poster_path? `${API.IMAGE_BASE_URL}${API.POSTER_SIZE}/${element.poster_path}` : '../images/no_image.jpg' }\r\n                                movieId={element.id} movieName={element.original_title}\r\n                    />\r\n                </div>)\r\n        })\r\n    }else if(props.actors) {\r\n        grids = props.actors.map((actor) => {\r\n            return (\r\n                <div key={actor.id} className={\"rmdb-grid-element\"}>\r\n                    <Actor actor={actor} />\r\n                </div>)\r\n        })\r\n    }else {\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            {props.header && !props.leading ? (<h1>{props.header}</h1>) : null}\r\n            <div className={\"rmdb-grid-content\"}>\r\n                {grids}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FourColGrid\r\n","import React from 'react';\r\nimport './LoadMoreBtn.css';\r\n\r\nconst LoadMoreBtn = (props) => {\r\n    return (\r\n        <div className={\"rmdb-loadmorebtn\"} onClick={props.onClick}>\r\n            <p>{props.text}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadMoreBtn\r\n","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = (props) => {\r\n    return (\r\n        <div className={\"loader\"}>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner\r\n","import React, {Component} from \"react\";\r\nimport {API} from '../../config'\r\nimport './Home.css'\r\nimport SearchBar from \"../elements/SearchBar/SearchBar\";\r\nimport HeroImage from \"../elements/HeroImage/HeroImage\";\r\nimport FourColGrid from \"../elements/FourColGrid/FourColGrid\";\r\nimport LoadMoreBtn from \"../elements/LoadMoreBtn/LoadMoreBtn\";\r\nimport Spinner from \"../elements/Spinner/Spinner\";\r\n\r\nclass Home extends Component {\r\n\r\n    state = {\r\n        movies: [],\r\n        heroImage: null,\r\n        loading: false,\r\n        currentPage: 0,\r\n        totalPages: 0,\r\n        searchTerm: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(localStorage.getItem('homeState')) {\r\n            const homeState = JSON.parse(localStorage.getItem('homeState'));\r\n            this.setState(homeState);\r\n        }else {\r\n            this.setState({loading: true});\r\n            this.fetchItemsWithMode('default');\r\n        }\r\n\r\n    }\r\n\r\n    fetchItemsWithMode = (Mode) => {\r\n        let endpoint = '';\r\n\r\n        if(Mode === 'search') {\r\n            this.setState({\r\n                movies: [],\r\n                loading: true,\r\n            })\r\n        }else {\r\n            this.setState({\r\n                loading: true,\r\n            })\r\n        }\r\n\r\n\r\n        if(Mode === 'default') {\r\n            endpoint = `${API.API_URL}movie/popular?api_key=${API.API_KEY}&language=en&page=1`;\r\n        }else if(Mode === 'loadMore'){\r\n            endpoint = `${API.API_URL}movie/popular?api_key=${API.API_KEY}&language=en&page=${this.state.currentPage + 1}`\r\n        }else if(Mode === 'search') {\r\n            if(this.state.searchTerm === '') {\r\n                endpoint = `${API.API_URL}movie/popular?api_key=${API.API_KEY}&language=en&page=1`;\r\n            }else {\r\n                endpoint = `${API.API_URL}search/movie?api_key=${API.API_KEY}&language=en&query=${this.state.searchTerm}`\r\n            }\r\n        }else if(Mode === 'search & loadMore'){\r\n            endpoint = `${API.API_URL}search/movie?api_key=${API.API_KEY}&language=en&query=${this.state.searchTerm}&page=${this.state.currentPage + 1}`\r\n        }\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    fetchItems(endpoint) {\r\n        fetch(endpoint)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                this.setState({\r\n                    movies: this.state.movies.concat(res.results),\r\n                    heroImage: this.state.heroImage || res.results[0],\r\n                    loading: false,\r\n                    currentPage: res.page,\r\n                    totalPages: res.total_pages\r\n                },() => {\r\n                    console.log(this.state);\r\n                    localStorage.setItem('homeState', JSON.stringify(this.state));\r\n                })\r\n            }).catch(\r\n            ()=>{this.fetchItemsWithMode('default');});\r\n    }\r\n\r\n    SearchItems = (searchTerm) => {\r\n        this.setState({\r\n            searchTerm\r\n        }, () => {\r\n            this.fetchItemsWithMode('search')\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'rmdb-home'}>\r\n                {this.state.heroImage ?\r\n                    (<div>\r\n                        <HeroImage image={`${API.IMAGE_BASE_URL}${API.BACKDROP_SIZE}${this.state.heroImage.backdrop_path}`}\r\n                                title={this.state.heroImage.original_title} text={this.state.heroImage.overview}/>\r\n                        <SearchBar callback={this.SearchItems} searchTerm={this.state.searchTerm} />\r\n                    </div>) : null}\r\n                <div className={\"rmdb-home-grid\"}>\r\n                    <FourColGrid header={this.state.searchTerm? 'Search results' : 'Popular Movies'}\r\n                    loading={this.state.loading} movies={this.state.movies} />\r\n                </div>\r\n                {this.state.loading ? <Spinner /> : null}\r\n                {(this.state.currentPage < this.state.totalPages) ?\r\n                    <LoadMoreBtn text={\"Load More\"}\r\n                                 onClick={() => {\r\n                                     (this.state.searchTerm === \"\") ?\r\n                                     this.fetchItemsWithMode('loadMore'):\r\n                                     this.fetchItemsWithMode('search & loadMore')}}/> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst NotFound = (props) => {\r\n    return (\r\n        <div>\r\n            <h1>Not Found This Page</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport './Navigation.css';\r\n\r\nconst Navigation = (props) => {\r\n    return (\r\n        <div className={\"rmdb-navigation\"}>\r\n            <div className={\"rmdb-navigation-content\"}>\r\n                <Link to={\"/\"}>\r\n                    <p>Home</p>\r\n                </Link>\r\n                <p>/</p>\r\n                <p>{props.movie}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport './MovieInfoBar.css';\r\nimport FontAwesome from 'react-fontawesome'\r\nimport {calcTime, convertMoney} from \"../../../helpers\";\r\n\r\n\r\nconst MovieInfoBar = (props) => {\r\n    return (\r\n        <div className={\"rmdb-movieinfobar\"}>\r\n            <div className={\"rmdb-movieinfobar-content\"}>\r\n                <div className={\"rmdb-movieinfobar-content-col\"}>\r\n                    <FontAwesome className={\"fa-time\"} name={\"clock-o\"} size=\"2x\"/>\r\n                    <span className={\"rmdb-movieinfobar-info\"}>Running time: {calcTime(props.movie.runtime)}</span>\r\n                </div>\r\n                <div className={\"rmdb-movieinfobar-content-col\"}>\r\n                    <FontAwesome className={\"fa-budget \"} name={\"money\"} size=\"2x\"/>\r\n                    <span className={\"rmdb-movieinfobar-info\"}>Budget: {convertMoney(props.movie.budget)}</span>\r\n                </div>\r\n                <div className={\"rmdb-movieinfobar-content-col\"}>\r\n                    <FontAwesome className={\"fa-revenue \"} name={\"ticket\"} size=\"2x\"/>\r\n                    <span className={\"rmdb-movieinfobar-info\"}>Revenue: {props.movie.revenue}</span>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieInfoBar;\r\n","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n}\n\n// Convert a number to $ format\nexport const convertMoney = (money) => {\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n}","import React from 'react';\r\nimport './MovieInfo.css';\r\nimport {API} from \"../../../config\";\r\nimport MovieThumb from \"../MovieThumb/MovieThumb\";\r\nimport FontAwesome from 'react-fontawesome'\r\n\r\n\r\nconst MovieInfo = (props) => {\r\n    return (\r\n        <div className={\"rmdb-movieinfo\"}\r\n             style={{background: props.movie.backdrop_path ?\r\n                     `url('${API.IMAGE_BASE_URL}${API.BACKDROP_SIZE}${props.movie.backdrop_path}')`: '#000'\r\n             }}>\r\n            <div className={\"rmdb-movieinfo-content\"}>\r\n                <div className={\"rmdb-movieinfo-thumb\"}>\r\n                    <MovieThumb clickable = {false}\r\n                        image={props.movie.poster_path ? `${API.IMAGE_BASE_URL}${API.POSTER_SIZE}/${props.movie.poster_path}`: '../images/no_image.jpg'}/>\r\n                </div>\r\n                <div className={\"rmdb-movieinfo-text\"}>\r\n                    <h1>{props.movie.title}</h1>\r\n                    <h3>PLOT</h3>\r\n                    <p>{props.movie.overview}</p>\r\n                    <h3>RMDB RATING</h3>\r\n                    <div className={\"rmdb-rating\"}>\r\n                        <meter min={\"0\"} max={\"100\"} low={\"40\"} high={\"70\"} value={props.movie.vote_average * 10} />\r\n                        <p className={\"rmdb-score\"}>{props.movie.vote_average}</p>\r\n                    </div>\r\n                    {props.directors.length > 1 ? <h3>DIRECTOR</h3> :<h3>DIRECTORS</h3>}\r\n                    {props.directors.map((director) => {\r\n                        return <p key={director.id} className={\"rmdb-director\"}>{director.name}</p>\r\n                    })}\r\n                </div>\r\n                <FontAwesome className={\"fa-film\"}  name=\"film\" size={\"5x\"}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieInfo;\r\n","import React, {useEffect, useState} from 'react'\r\nimport './Movie.css'\r\nimport FourColGrid from \"../elements/FourColGrid/FourColGrid\";\r\nimport Spinner from \"../elements/Spinner/Spinner\";\r\nimport Navigation from \"../elements/Navigation/Navigation\";\r\nimport MovieInfoBar from \"../elements/MovieInfoBar/MovieInfoBar\";\r\nimport MovieInfo from \"../elements/MovieInfo/MovieInfo\";\r\nimport {API} from \"../../config\";\r\n\r\nconst Movie = ({match}) => {\r\n\r\n    const [state, setState] = useState({\r\n        movie: null,\r\n        actors: null,\r\n        direction: []\r\n    })\r\n    const [movie, setMovie] = useState(null);\r\n    const [loading, setLoad] = useState(true);\r\n    const [init] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const endpoint = `${API.API_URL}movie/${match.params.movieId}?api_key=${API.API_KEY}&language=en-US`;\r\n        fetchItems(endpoint, 'movie');\r\n    },[init, match.params.movieId])\r\n    useEffect(() => {\r\n        const endpoint = `${API.API_URL}movie/${match.params.movieId}/credits?api_key=${API.API_KEY}`;\r\n        fetchItems(endpoint, 'detail');\r\n    },[movie, match.params.movieId])\r\n\r\n    const fetchItems = (endpoint, content) => {\r\n        fetch(endpoint)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.status_code) {\r\n                    setLoad(false);\r\n                }else {\r\n                    if(content === 'movie') {\r\n                        setMovie(res);\r\n                    }else if(content === 'detail') {\r\n                        setState({actors: res.cast,direction: res.crew.filter((member) => member.job === \"Director\")});\r\n                        setLoad(false);\r\n                    }\r\n\r\n                }\r\n            }).then()\r\n            .catch(\r\n            ()=>{});\r\n    }\r\n\r\n\r\n    const movieComponent = movie && state.actors ? <div className={\"rmdb-movie\"}>\r\n        <Navigation movie={movie.original_title} />\r\n        <MovieInfo movie={movie} directors={state.direction}/>\r\n        <MovieInfoBar movie={movie} />\r\n        <div className={\"rmdb-home-grid\"}>\r\n            <FourColGrid header={'Actors'}\r\n                         actors={state.actors} />\r\n        </div>\r\n        {loading ? <Spinner /> : null}\r\n    </div> : <div className={\"rmdb-movie\"}><h1>No Movie Found</h1></div>;\r\n\r\n    return (\r\n        movieComponent\r\n    )\r\n}\r\n\r\nexport default Movie\r\n","import React from 'react';\r\nimport Header from '../elements/Header/Header'\r\nimport Home from '../Home/Home'\r\nimport {BrowserRouter, Route, Switch,} from \"react-router-dom\";\r\nimport NotFound from \"../elements/NotFound/NotFound\";\r\nimport Movie from \"../Movie/Movie\";\r\n\r\n\r\nconst App = () => {\r\n\r\n    console.log(\"This is the process.env\", process.env.PUBLIC_URL);\r\n    return (\r\n        <BrowserRouter>\r\n            <React.Fragment>\r\n                <Header />\r\n                <Switch>\r\n                    <Route path={\"/\"} component={Home} exact />\r\n                    <Route path={\"/not-found\"} component={NotFound} exact />\r\n                    <Route path={\"/:movieId\"} component={Movie} exact />\r\n                </Switch>\r\n            </React.Fragment>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App'\n\nReactDOM.render(<App basename={process.env.PUBLIC_URL} />, document.getElementById('root'));\n"],"sourceRoot":""}